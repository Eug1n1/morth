// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

model User {
    uuid String @id @default(uuid())

    username String  @unique
    hash     String
    hashedRt String?

    Media   Media[]
    Views   View[]
    Likes   Like[]
    Folders Folder[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Media {
    uuid String @id @default(uuid())

    title       String
    description String  @default("")
    filePath    String  @unique
    isPrivate   Boolean @default(false) // TODO: a nahuy nuzhno

    Tags    Tag[]
    Folders Folder[]
    Views   View[]
    Likes   Like[]

    Type     Type   @relation(fields: [typeUuid], references: [uuid])
    typeUuid String

    User     User   @relation(fields: [userUuid], references: [uuid])
    userUuid String

    Thumb     Thumbnail @relation(fields: [thumbUuid], references: [uuid])
    thumbUuid String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Thumbnail {
    uuid String @id @default(uuid())

    thumbPath String // TODO: set default path

    Media Media[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Folder {
    uuid String @id @default(uuid())

    name      String
    isPrivate Boolean @default(false) // TODO: a nahuy nuzhno

    Media Media[]

    User     User   @relation(fields: [userUuid], references: [uuid])
    userUuid String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@unique([name, userUuid])
}

model Tag {
    uuid String @id @default(uuid())

    name String @unique

    Media Media[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Type {
    uuid String @id @default(uuid())

    name String

    Media Media[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model View {
    id Int @id @default(autoincrement())

    Media     Media  @relation(fields: [mediaUuid], references: [uuid])
    mediaUuid String

    User     User   @relation(fields: [userUuid], references: [uuid])
    userUuid String

    createdAt DateTime @default(now())
}

model Like {
    id Int @id @default(autoincrement())

    Media     Media  @relation(fields: [mediaUuid], references: [uuid])
    mediaUuid String

    User     User   @relation(fields: [userUuid], references: [uuid])
    userUuid String

    createdAt DateTime @default(now())

    @@unique([userUuid, mediaUuid])
}
